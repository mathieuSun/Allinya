{
  "version": 3,
  "sources": ["../../api/practitioners/status.ts"],
  "sourcesContent": ["import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport { z } from 'zod';\nimport { handleCors } from '../_lib/cors';\nimport { requireAuth } from '../_lib/auth';\nimport { storage } from '../_lib/database';\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  if (handleCors(req, res)) return;\n  \n  if (req.method !== 'PUT') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n  \n  try {\n    const auth = await requireAuth(req, res);\n    if (!auth) return;\n    \n    const { isOnline, inService } = z.object({\n      isOnline: z.boolean().optional(),\n      inService: z.boolean().optional()\n    }).parse(req.body);\n    \n    const existingPractitioner = await storage.getPractitioner(auth.userId);\n    if (!existingPractitioner) {\n      return res.status(404).json({ error: 'Practitioner not found' });\n    }\n    \n    const updates: any = {};\n    if (isOnline !== undefined) updates.isOnline = isOnline;\n    if (inService !== undefined) updates.inService = inService;\n    \n    const practitioner = await storage.updatePractitioner(auth.userId, updates);\n    res.json(practitioner);\n  } catch (error: any) {\n    console.error('Toggle status error:', error);\n    if (error.name === 'ZodError') {\n      return res.status(400).json({ error: 'Invalid input', details: error.errors });\n    }\n    res.status(400).json({ error: error.message || 'Failed to toggle status' });\n  }\n}"],
  "mappings": "AACA,SAAS,SAAS;AAClB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AAExB,eAAO,QAA+B,KAAoB,KAAqB;AAC7E,MAAI,WAAW,KAAK,GAAG,EAAG;AAE1B,MAAI,IAAI,WAAW,OAAO;AACxB,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,qBAAqB,CAAC;AAAA,EAC7D;AAEA,MAAI;AACF,UAAM,OAAO,MAAM,YAAY,KAAK,GAAG;AACvC,QAAI,CAAC,KAAM;AAEX,UAAM,EAAE,UAAU,UAAU,IAAI,EAAE,OAAO;AAAA,MACvC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,MAC/B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,IAClC,CAAC,EAAE,MAAM,IAAI,IAAI;AAEjB,UAAM,uBAAuB,MAAM,QAAQ,gBAAgB,KAAK,MAAM;AACtE,QAAI,CAAC,sBAAsB;AACzB,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,yBAAyB,CAAC;AAAA,IACjE;AAEA,UAAM,UAAe,CAAC;AACtB,QAAI,aAAa,OAAW,SAAQ,WAAW;AAC/C,QAAI,cAAc,OAAW,SAAQ,YAAY;AAEjD,UAAM,eAAe,MAAM,QAAQ,mBAAmB,KAAK,QAAQ,OAAO;AAC1E,QAAI,KAAK,YAAY;AAAA,EACvB,SAAS,OAAY;AACnB,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,QAAI,MAAM,SAAS,YAAY;AAC7B,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,iBAAiB,SAAS,MAAM,OAAO,CAAC;AAAA,IAC/E;AACA,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,MAAM,WAAW,0BAA0B,CAAC;AAAA,EAC5E;AACF;",
  "names": []
}
