{
  "version": 3,
  "sources": ["../../api/sessions/end.ts"],
  "sourcesContent": ["import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport { z } from 'zod';\nimport { handleCors } from '../_lib/cors';\nimport { requireAuth } from '../_lib/auth';\nimport { storage } from '../_lib/database';\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  if (handleCors(req, res)) return;\n  \n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n  \n  try {\n    const auth = await requireAuth(req, res);\n    if (!auth) return;\n    \n    const { sessionId } = z.object({\n      sessionId: z.string().uuid(),\n    }).parse(req.body);\n\n    const userId = auth.userId;\n    const session = await storage.getSession(sessionId);\n\n    if (!session) {\n      return res.status(404).json({ error: 'Session not found' });\n    }\n\n    // Verify user is participant\n    if (userId !== session.guestId && userId !== session.practitionerId) {\n      return res.status(403).json({ error: 'Not a session participant' });\n    }\n\n    const updatedSession = await storage.updateSession(sessionId, {\n      phase: 'ended'\n    });\n\n    // Mark practitioner as not in service\n    await storage.updatePractitioner(session.practitionerId, { inService: false });\n\n    res.json(updatedSession);\n  } catch (error: any) {\n    console.error('End session error:', error);\n    res.status(400).json({ error: error.message });\n  }\n}"],
  "mappings": "AACA,SAAS,SAAS;AAClB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AAExB,eAAO,QAA+B,KAAoB,KAAqB;AAC7E,MAAI,WAAW,KAAK,GAAG,EAAG;AAE1B,MAAI,IAAI,WAAW,QAAQ;AACzB,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,qBAAqB,CAAC;AAAA,EAC7D;AAEA,MAAI;AACF,UAAM,OAAO,MAAM,YAAY,KAAK,GAAG;AACvC,QAAI,CAAC,KAAM;AAEX,UAAM,EAAE,UAAU,IAAI,EAAE,OAAO;AAAA,MAC7B,WAAW,EAAE,OAAO,EAAE,KAAK;AAAA,IAC7B,CAAC,EAAE,MAAM,IAAI,IAAI;AAEjB,UAAM,SAAS,KAAK;AACpB,UAAM,UAAU,MAAM,QAAQ,WAAW,SAAS;AAElD,QAAI,CAAC,SAAS;AACZ,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,oBAAoB,CAAC;AAAA,IAC5D;AAGA,QAAI,WAAW,QAAQ,WAAW,WAAW,QAAQ,gBAAgB;AACnE,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,4BAA4B,CAAC;AAAA,IACpE;AAEA,UAAM,iBAAiB,MAAM,QAAQ,cAAc,WAAW;AAAA,MAC5D,OAAO;AAAA,IACT,CAAC;AAGD,UAAM,QAAQ,mBAAmB,QAAQ,gBAAgB,EAAE,WAAW,MAAM,CAAC;AAE7E,QAAI,KAAK,cAAc;AAAA,EACzB,SAAS,OAAY;AACnB,YAAQ,MAAM,sBAAsB,KAAK;AACzC,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,EAC/C;AACF;",
  "names": []
}
