{
  "version": 3,
  "sources": ["../../api/agora/token.ts"],
  "sourcesContent": ["import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport { z } from 'zod';\nimport { createRequire } from \"module\";\nimport { handleCors } from '../_lib/cors';\nimport { requireAuth } from '../_lib/auth';\nimport { agoraConfig } from '../_lib/config';\n\n// Import Agora token builder (CommonJS module)\nconst require = createRequire(import.meta.url);\nconst AgoraToken = require(\"agora-token\");\nconst RtcTokenBuilder = AgoraToken.RtcTokenBuilder;\nconst RtcRole = AgoraToken.RtcRole;\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  if (handleCors(req, res)) return;\n  \n  if (req.method !== 'GET') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n  \n  try {\n    const auth = await requireAuth(req, res);\n    if (!auth) return;\n    \n    const { channel, uid } = z.object({\n      channel: z.string(),\n      uid: z.string(),\n    }).parse(req.query);\n\n    const { appId, appCertificate } = agoraConfig;\n\n    if (!appId || !appCertificate) {\n      return res.status(500).json({ error: 'Agora credentials not configured' });\n    }\n\n    const privilegeExpireTime = Math.floor(Date.now() / 1000) + 3600; // 1 hour\n    // Both practitioners and guests need to publish audio/video in a call\n    // So we always use PUBLISHER role for both\n    const agoraRole = RtcRole.PUBLISHER;\n\n    const token = RtcTokenBuilder.buildTokenWithUserAccount(\n      appId,\n      appCertificate,\n      channel,\n      uid, // Use string UID directly\n      agoraRole,\n      privilegeExpireTime\n    );\n\n    res.json({ \n      token,\n      appId,\n      uid\n    });\n  } catch (error: any) {\n    console.error('Agora token error:', error);\n    res.status(400).json({ error: error.message });\n  }\n}"],
  "mappings": "AACA,SAAS,SAAS;AAClB,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;AAG5B,MAAMA,WAAU,cAAc,YAAY,GAAG;AAC7C,MAAM,aAAaA,SAAQ,aAAa;AACxC,MAAM,kBAAkB,WAAW;AACnC,MAAM,UAAU,WAAW;AAE3B,eAAO,QAA+B,KAAoB,KAAqB;AAC7E,MAAI,WAAW,KAAK,GAAG,EAAG;AAE1B,MAAI,IAAI,WAAW,OAAO;AACxB,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,qBAAqB,CAAC;AAAA,EAC7D;AAEA,MAAI;AACF,UAAM,OAAO,MAAM,YAAY,KAAK,GAAG;AACvC,QAAI,CAAC,KAAM;AAEX,UAAM,EAAE,SAAS,IAAI,IAAI,EAAE,OAAO;AAAA,MAChC,SAAS,EAAE,OAAO;AAAA,MAClB,KAAK,EAAE,OAAO;AAAA,IAChB,CAAC,EAAE,MAAM,IAAI,KAAK;AAElB,UAAM,EAAE,OAAO,eAAe,IAAI;AAElC,QAAI,CAAC,SAAS,CAAC,gBAAgB;AAC7B,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,mCAAmC,CAAC;AAAA,IAC3E;AAEA,UAAM,sBAAsB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,IAAI;AAG5D,UAAM,YAAY,QAAQ;AAE1B,UAAM,QAAQ,gBAAgB;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAI,KAAK;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,SAAS,OAAY;AACnB,YAAQ,MAAM,sBAAsB,KAAK;AACzC,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,EAC/C;AACF;",
  "names": ["require"]
}
