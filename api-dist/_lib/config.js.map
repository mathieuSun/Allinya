{
  "version": 3,
  "sources": ["../../api/_lib/config.ts"],
  "sourcesContent": ["import { z } from 'zod';\n\n// Define the environment configuration schema\nconst envSchema = z.object({\n  // Database Configuration\n  DATABASE_URL: z.string().url().min(1, 'DATABASE_URL is required'),\n  \n  // Session Configuration\n  SESSION_SECRET: z.string().min(32, 'SESSION_SECRET must be at least 32 characters'),\n  \n  // Supabase Configuration\n  SUPABASE_URL: z.string().url().min(1, 'SUPABASE_URL is required'),\n  SUPABASE_ANON_KEY: z.string().min(1, 'SUPABASE_ANON_KEY is required'),\n  SUPABASE_SERVICE_ROLE_KEY: z.string().min(1, 'SUPABASE_SERVICE_ROLE_KEY is required'),\n  \n  // Agora Configuration\n  AGORA_APP_ID: z.string().min(1, 'AGORA_APP_ID is required'),\n  AGORA_APP_CERTIFICATE: z.string().min(1, 'AGORA_APP_CERTIFICATE is required'),\n});\n\n// Parse and validate environment variables\nexport const config = envSchema.parse(process.env);\n\nexport const supabaseConfig = {\n  url: config.SUPABASE_URL,\n  anonKey: config.SUPABASE_ANON_KEY,\n  serviceRoleKey: config.SUPABASE_SERVICE_ROLE_KEY,\n};\n\nexport const agoraConfig = {\n  appId: config.AGORA_APP_ID,\n  appCertificate: config.AGORA_APP_CERTIFICATE,\n};\n\n// Build timestamp and version\nexport const BUILD_TIMESTAMP = Date.now().toString();\nexport const BUILD_VERSION = \"1.0.0\";"],
  "mappings": "AAAA,SAAS,SAAS;AAGlB,MAAM,YAAY,EAAE,OAAO;AAAA;AAAA,EAEzB,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,GAAG,0BAA0B;AAAA;AAAA,EAGhE,gBAAgB,EAAE,OAAO,EAAE,IAAI,IAAI,+CAA+C;AAAA;AAAA,EAGlF,cAAc,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,GAAG,0BAA0B;AAAA,EAChE,mBAAmB,EAAE,OAAO,EAAE,IAAI,GAAG,+BAA+B;AAAA,EACpE,2BAA2B,EAAE,OAAO,EAAE,IAAI,GAAG,uCAAuC;AAAA;AAAA,EAGpF,cAAc,EAAE,OAAO,EAAE,IAAI,GAAG,0BAA0B;AAAA,EAC1D,uBAAuB,EAAE,OAAO,EAAE,IAAI,GAAG,mCAAmC;AAC9E,CAAC;AAGM,MAAM,SAAS,UAAU,MAAM,QAAQ,GAAG;AAE1C,MAAM,iBAAiB;AAAA,EAC5B,KAAK,OAAO;AAAA,EACZ,SAAS,OAAO;AAAA,EAChB,gBAAgB,OAAO;AACzB;AAEO,MAAM,cAAc;AAAA,EACzB,OAAO,OAAO;AAAA,EACd,gBAAgB,OAAO;AACzB;AAGO,MAAM,kBAAkB,KAAK,IAAI,EAAE,SAAS;AAC5C,MAAM,gBAAgB;",
  "names": []
}
