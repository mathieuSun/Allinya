{
  "version": 3,
  "sources": ["../../api/auth/logout.ts"],
  "sourcesContent": ["import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport { handleCors } from '../_lib/cors';\nimport { supabase } from '../_lib/supabase';\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  if (handleCors(req, res)) return;\n  \n  if (req.method !== 'POST') {\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n  \n  try {\n    // Try to get token from Authorization header first\n    const authHeader = req.headers.authorization;\n    let token: string | undefined;\n\n    if (authHeader && typeof authHeader === 'string' && authHeader.startsWith('Bearer ')) {\n      token = authHeader.substring(7);\n    } else if ((req.body as any)?.refresh_token) {\n      // Fall back to refresh token from body if provided\n      token = (req.body as any).refresh_token;\n    }\n\n    if (token) {\n      // Sign out the user session\n      const { error } = await supabase.auth.admin.signOut(token);\n      if (error) {\n        console.error('Logout error:', error);\n      }\n    }\n\n    // Always return 204 No Content for logout\n    res.status(204).send('');\n  } catch (error) {\n    console.error('Logout error:', error);\n    // Still return 204 even if there's an error\n    res.status(204).send('');\n  }\n}"],
  "mappings": "AACA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AAEzB,eAAO,QAA+B,KAAoB,KAAqB;AAC7E,MAAI,WAAW,KAAK,GAAG,EAAG;AAE1B,MAAI,IAAI,WAAW,QAAQ;AACzB,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,qBAAqB,CAAC;AAAA,EAC7D;AAEA,MAAI;AAEF,UAAM,aAAa,IAAI,QAAQ;AAC/B,QAAI;AAEJ,QAAI,cAAc,OAAO,eAAe,YAAY,WAAW,WAAW,SAAS,GAAG;AACpF,cAAQ,WAAW,UAAU,CAAC;AAAA,IAChC,WAAY,IAAI,MAAc,eAAe;AAE3C,cAAS,IAAI,KAAa;AAAA,IAC5B;AAEA,QAAI,OAAO;AAET,YAAM,EAAE,MAAM,IAAI,MAAM,SAAS,KAAK,MAAM,QAAQ,KAAK;AACzD,UAAI,OAAO;AACT,gBAAQ,MAAM,iBAAiB,KAAK;AAAA,MACtC;AAAA,IACF;AAGA,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE;AAAA,EACzB,SAAS,OAAO;AACd,YAAQ,MAAM,iBAAiB,KAAK;AAEpC,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE;AAAA,EACzB;AACF;",
  "names": []
}
